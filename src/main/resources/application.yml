#Configuration
server:
  port: 8080

spring:

  profiles:
    active: local

  application :
    name : chatbot_spring

  jpa:
    show-sql: true
    hibernate.ddl-auto: create
    properties:
      hibernate:
        format_sql: true
#        dialect: org.hibernate.dialect.MariaDBDialect

  kafka:
      consumer :
        bootstrap-servers: ec2-15-164-95-216.ap-northeast-2.compute.amazonaws.com:9092
        group-id: chatbotGroup
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer
      producer:
        bootstrap-servers: ec2-15-164-95-216.ap-northeast-2.compute.amazonaws.com:9092
        key-serializer: org.apache.kafka.common.serialization.StringSerializer
        value-serializer: org.apache.kafka.common.serialization.StringSerializer

  #MySQL 설정
  # datasource:
  #   url: jdbc:mysql://mariadbportfolio.cua32mtg2la4.ap-northeast-2.rds.amazonaws.com:3306/portfolio?allowPublicKeyRetrieval=true&useSSL=false
  #   username: admin
  #   password: rootroot

--- #local 환경 구분자
spring:
  config:
    activate:
      on-profile: local
  #H2 (testdb, sa) jdbcTemplate과 함께 쓰면 유용!
  h2:
    console:
      enabled: true
  datasource :
    url : jdbc:h2:mem:testdb
    driverClassName : org.h2.Driver
    username : sa
    password :

--- #dev 환경 구분자
spring:
  config:
    activate:
      on-profile: dev

--- #prod 환경 구분자
spring:
  config:
    activate:
      on-profile: prod